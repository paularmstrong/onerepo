---
import Moon from './icons/Moon.astro';
import Sun from './icons/Sun.astro';
---

<label class="relative block cursor-pointer p-2 transition-colors duration-200 hover:text-cyan-400">
	<span class="sr-only">Theme</span>
	<span data-theme-icon="light" id="theme-icon-light" class="block h-6 w-6"><Sun /></span>
	<span data-theme-icon="dark" id="theme-icon-dark" class="block h-6 w-6"><Moon /></span>
	<select id="theme-switcher" name="theme" class="absolute inset-0 opacity-0">
		<option value="auto">Auto</option>
		<option value="light">Light</option>
		<option value="dark">Dark</option>
	</select>
</label>

<script>
	type Theme = 'light' | 'dark' | 'auto';
	const query = '(prefers-color-scheme: dark)';
	const dark = 'dark';
	const light = 'light';

	function callApi(theme: Theme, auto: boolean) {
		const params = new URLSearchParams({ theme, auto: auto ? 'true' : 'false' });
		fetch(`/api/theme/?${params.toString()}`);
	}

	const sel = document.getElementById('theme-switcher')! as HTMLSelectElement;
	const sun = document.getElementById('theme-icon-light')!;
	const moon = document.getElementById('theme-icon-dark')!;

	function listener(event: MediaQueryListEvent) {
		const theme = event.matches ? dark : light;
		callApi(theme, true);

		const doc = document.documentElement;

		if (theme === dark) {
			doc.classList.add(dark);
			moon.classList.remove('hidden');
			sun.classList.add('hidden');
		} else {
			doc.classList.remove(dark);
			moon.classList.add('hidden');
			sun.classList.remove('hidden');
		}
	}

	function setTheme(theme: Theme, auto?: boolean) {
		const doc = document.documentElement;
		const isAuto = auto || theme === 'auto';
		let newTheme: Theme = theme;
		if (isAuto) {
			newTheme = window.matchMedia(query).matches ? dark : light;
			window.matchMedia(query).addEventListener('change', listener);
		} else {
			window.matchMedia(query).removeEventListener('change', listener);
		}

		doc.dataset.autoTheme = isAuto ? 'true' : 'false';
		if (newTheme === dark) {
			doc.classList.add(dark);
			moon.classList.remove('hidden');
			sun.classList.add('hidden');
		} else {
			doc.classList.remove(dark);
			moon.classList.add('hidden');
			sun.classList.remove('hidden');
		}

		callApi(newTheme!, isAuto);
	}

	const doc = document.documentElement;
	if (doc.dataset.autoTheme === 'true') {
		window.matchMedia(query).addEventListener('change', listener);
	}

	setTheme(doc.className.includes('dark') ? 'dark' : 'light', doc.dataset.autoTheme === 'true');

	sel.addEventListener('change', (event) => {
		const target = event.target! as HTMLSelectElement;
		setTheme(target.value as Theme);
	});
</script>
