---
type Props = {
	title?: string;
	noTerminal?: boolean;
};

const { title, noTerminal } = Astro.props;
---

<div role="listitem" class="instruction">
	<div class={`instruction--content ${noTerminal ? 'instruction--content-noterm' : ''}`}>
		<div class="not-content"><h3 class="instruction--title">{title}</h3></div>
		<slot name="content" />
	</div>
	{
		noTerminal ? null : (
			<div class="instruction--terminal">
				<slot name="terminal" />
			</div>
		)
	}
</div>

<style>
	.instruction {
		counter-increment: instructions;
		display: grid;
		grid-template-columns: repeat(5, minmax(0, 1fr));
		flex-direction: row;
		gap: 1rem 2.4rem;
		padding-inline-start: 2.4rem;
		position: relative;
	}
	.instruction::before {
		content: counter(instructions);
		display: flex;
		align-items: center;
		justify-content: center;
		flex-shrink: 0;
		flex-grow: 0;
		width: 1.4rem;
		height: 1.4rem;
		font-size: 0.875rem;
		font-weight: bold;
		border-radius: 0.25rem;
		border: 1px solid var(--sl-color-gray-5);
		position: absolute;
		left: 0;
		top: 0.25rem;
		background-color: var(--sl-color-gray-6);
		color: var(--sl-color-gray-3);
	}
	.instruction::after {
		content: '';
		display: block;
		border-left: 1px solid var(--sl-color-gray-5);
		position: absolute;
		top: 2rem;
		left: 0.7rem;
		bottom: -3.25rem;
	}
	.instruction:last-of-type::after {
		display: none;
	}

	.instruction--content {
		grid-column-start: 1;
		grid-column-end: 3;
	}
	.instruction--content.instruction--content-noterm {
		grid-column-end: 6;
	}

	.instruction--terminal {
		grid-column-start: 3;
		grid-column-end: 6;
		margin-top: 0 !important;
	}

	.instruction--title {
		font-size: 1rem;
	}

	@media (max-width: 50rem) {
		.instruction--content,
		.instruction--terminal {
			grid-column-start: 1;
			grid-column-end: 6;
		}
	}
</style>
