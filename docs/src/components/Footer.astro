---
import Default from '@astrojs/starlight/components/Footer.astro';

const isHomepage = Astro.props.slug === '';
---

{
	isHomepage ? (
		<footer class="home-footer">
			<div>
				<a href="/">oneRepo</a>
				Copyright Â©<a href="https://paularmstrong.dev">Paul Armstrong</a>
			</div>
			<div>
				<a href="https://www.netlify.com" rel="noopener" target="_blank">
					<img
						src="https://www.netlify.com/v3/img/components/netlify-color-bg.svg"
						alt="Deploys by Netlify"
						width={114}
						height={50}
					/>
				</a>
			</div>
		</footer>
	) : (
		<Default {...Astro.props}>
			<slot />
		</Default>
	)
}

<style>
	.home-footer {
		border-top: 1px solid var(--sl-color-gray-4);
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding: 1rem 0;
		margin: 2rem auto;
	}
</style>

<script>
	/**
	 * @params {HTMLCollectionOf<HTMLElement>} graphs
	 */
	async function renderDiagrams(graphs) {
		const { default: mermaid } = await import('mermaid');
		mermaid.initialize({
			startOnLoad: false,
			fontFamily: 'var(--sans-font)',
			// @ts-ignore This works, but TS expects a enum for some reason
			theme: window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default',
		});

		for (const graph of graphs) {
			const content = graph.getAttribute('data-content');
			if (!content) continue;
			let svg = document.createElement('svg');
			const id = (svg.id = 'mermaid-' + Math.round(Math.random() * 100000));
			graph.appendChild(svg);
			mermaid.render(id, content).then((result) => {
				graph.innerHTML = result.svg;
			});
		}
	}

	const graphs = document.getElementsByClassName('mermaid');
	if (document.getElementsByClassName('mermaid').length > 0) {
		renderDiagrams(graphs);
	}
</script>

<script data-goatcounter="https://onerepo.goatcounter.com/count" async src="//gc.zgo.at/count.js"></script>
