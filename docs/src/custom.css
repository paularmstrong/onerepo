/* Dark mode colors. */
:root {
	--sl-color-accent-low: #3e1122;
	--sl-color-accent: #c00063;
	--sl-color-accent-high: #f1b5c6;
	--sl-color-white: #ffffff;
	--sl-color-gray-1: #e8eef6;
	--sl-color-gray-2: #bbc3cc;
	--sl-color-gray-3: #7f8d9e;
	--sl-color-gray-4: #4c5969;
	--sl-color-gray-5: #2d3948;
	--sl-color-gray-6: #1c2835;
	--sl-color-black: #13191f;

	--sl-content-width: 56rem;
}
/* Light mode colors. */
:root[data-theme='light'] {
	--sl-color-accent-low: #f7c9d5;
	--sl-color-accent: #c30065;
	--sl-color-accent-high: #5b102f;
	--sl-color-white: #13191f;
	--sl-color-gray-1: #1c2835;
	--sl-color-gray-2: #2d3948;
	--sl-color-gray-3: #4c5969;
	--sl-color-gray-4: #7f8d9e;
	--sl-color-gray-5: #bbc3cc;
	--sl-color-gray-6: #e8eef6;
	--sl-color-gray-7: #f3f7fa;
	--sl-color-black: #ffffff;
}

code {
	white-space: nowrap;
}

/**
 * Overrides
 */
.hero {
	padding-block-end: 4rem;
}
.sl-markdown-content code,
.sl-markdown-content .starlight-aside {
	border-radius: 0.25rem;
}

.sl-markdown-content .expressive-code .frame.has-title:not(.is-terminal) .title {
	border-top-color: var(--sl-color-gray-5);
	border-right-width: 1px;
	border-right-color: var(--sl-color-gray-5);
	border-bottom-width: 2px;
	border-bottom-style: solid;
	border-bottom-color: var(--sl-color-gray-5);
	overflow: visible;
}

.sl-markdown-content .expressive-code .frame.has-title:not(.is-terminal) .title::after {
	inset: 0 0 -1px 0;
	border-top: none;
	border-bottom-width: 1px;
	border-bottom-color: var(--sl-color-accent);
}

.sl-markdown-content .card {
	border-radius: 0.5rem;
}

.tags {
	display: flex;
	flex-direction: row;
	list-style-type: none;
	gap: 1rem;
	padding: 0;
	margin: 0;
}

.tag {
	font-size: var(--sl-text-sm);
	border-radius: 0.25rem;
	padding: 0 0.3rem;
	display: inline-flex;
	border-width: 1px;
	border-style: solid;
	display: inline-flex;
	align-items: center;
	gap: 0.125rem;
}

.tags .tag {
	display: flex;
	flex-shrink: 0;
}

.tag.info {
	background-color: var(--sl-color-purple-low);
	color: var(--sl-color-white);
	border-color: var(--sl-color-purple);
}
.tag.note {
	background-color: var(--sl-color-blue-low);
	color: var(--sl-color-white);
	border-color: var(--sl-color-blue);
}
.tag.caution {
	background-color: var(--sl-color-orange-low);
	color: var(--sl-color-white);
	border-color: var(--sl-color-orange);
}
.tag.danger {
	background-color: var(--sl-color-red-low);
	color: var(--sl-color-white);
	border-color: var(--sl-color-red);
}
.tag.success {
	background-color: var(--sl-color-green-low);
	color: var(--sl-color-white);
	border-color: var(--sl-color-green);
}

.flex-col {
	display: flex;
	gap: 2rem;
	flex-wrap: wrap;
}

.flex-col > *,
.grid > * {
	margin: 0 !important;
}

.grid {
	display: grid;
	gap: 2rem;
}

.grid-cols-1 {
	grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
	grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-cols-3 {
	grid-template-columns: repeat(3, minmax(0, 1fr));
}
.grid-cols-4 {
	grid-template-columns: repeat(4, minmax(0, 1fr));
}
.grid-cols-5 {
	grid-template-columns: repeat(5, minmax(0, 1fr));
}
.grid-cols-6 {
	grid-template-columns: repeat(6, minmax(0, 1fr));
}
.grid-cols-7 {
	grid-template-columns: repeat(7, minmax(0, 1fr));
}
.grid-cols-8 {
	grid-template-columns: repeat(8, minmax(0, 1fr));
}
.grid-cols-9 {
	grid-template-columns: repeat(9, minmax(0, 1fr));
}
.grid-cols-10 {
	grid-template-columns: repeat(10, minmax(0, 1fr));
}
.grid-cols-11 {
	grid-template-columns: repeat(11, minmax(0, 1fr));
}
.grid-cols-12 {
	grid-template-columns: repeat(12, minmax(0, 1fr));
}

@media (max-width: 50rem) {
	.grid-cols-1 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-2 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-3 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-4 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-5 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-6 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-7 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-8 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-9 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-10 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-11 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-12 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
}

.node:hover rect.basic.label-container {
	stroke: var(--sl-color-green-high) !important;
	fill: var(--sl-color-green-low) !important;
}

.node rect.basic.label-container {
	stroke-width: 2px !important;
}

.nodeLabel {
	font-weight: 900 !important;
}
