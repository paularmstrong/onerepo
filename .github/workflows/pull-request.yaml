name: Pull request

on: pull_request

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tasks: ${{ steps.tasks.outputs.tasks }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'yarn'

      - run: yarn

      - uses: paularmstrong/onerepo/actions/get-tasks@main
        id: tasks
        with:
          packageManager: yarn
          lifecycle: pre-merge
          overrideBin: './bin/one.mjs'
          verbosity: 5

  tasks:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ fromJSON(needs.setup.outputs.tasks).parallel != '[]' && fromJSON(needs.setup.outputs.tasks).parallel != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        node:
          - 18
          - 20
        task:
          - ${{ fromJSON(needs.setup.outputs.tasks).parallel }}
          - ${{ fromJSON(needs.setup.outputs.tasks).serial }}
    name: v${{ matrix.node }} ${{ join(matrix.task.*.name, ', ') }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'

      - run: yarn

      - uses: paularmstrong/onerepo/actions/run-task@main
        with:
          task: |
            ${{ toJSON(matrix.task) }}

  tasks-sharding:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3]
    name: oneRepo shard ${{ matrix.shard }}/3
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'yarn'

      - run: yarn

      - run: ./bin/one.mjs tasks -c pre-merge --shard=${{ matrix.shard }}/3 -vvvv
